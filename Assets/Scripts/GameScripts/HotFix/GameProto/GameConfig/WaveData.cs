
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace GameConfig
{
public sealed partial class WaveData : Luban.BeanBase
{
    public WaveData(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Description = _buf.ReadString();
        FinishWaitTime = _buf.ReadFloat();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);WaveElements = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); WaveElements.Add(_e0);}}
    }

    public static WaveData DeserializeWaveData(ByteBuf _buf)
    {
        return new WaveData(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string Description;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly float FinishWaitTime;
    /// <summary>
    /// 等级
    /// </summary>
    public readonly System.Collections.Generic.List<int> WaveElements;
   
    public const int __ID__ = 667825763;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "description:" + Description + ","
        + "FinishWaitTime:" + FinishWaitTime + ","
        + "WaveElements:" + Luban.StringUtil.CollectionToString(WaveElements) + ","
        + "}";
    }
}
}

