
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace GameConfig
{
public sealed partial class TowerData : Luban.BeanBase
{
    public TowerData(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Description = _buf.ReadString();
        NameId = _buf.ReadString();
        Icon = _buf.ReadString();
        Entityid = _buf.ReadInt();
        PreviewEntityid = _buf.ReadInt();
        ProjectileEntityid = _buf.ReadInt();
        IsMultiAttack = _buf.ReadBool();
        MaxHp = _buf.ReadFloat();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Dimensions = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Dimensions.Add(_e0);}}
        Type = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Levels = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Levels.Add(_e0);}}
    }

    public static TowerData DeserializeTowerData(ByteBuf _buf)
    {
        return new TowerData(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string Description;
    /// <summary>
    /// 炮塔Id
    /// </summary>
    public readonly string NameId;
    /// <summary>
    /// 图标
    /// </summary>
    public readonly string Icon;
    /// <summary>
    /// 实体编号
    /// </summary>
    public readonly int Entityid;
    /// <summary>
    /// 预览实体编号
    /// </summary>
    public readonly int PreviewEntityid;
    /// <summary>
    /// 炮弹实体编号
    /// </summary>
    public readonly int ProjectileEntityid;
    /// <summary>
    /// 是否攻击多个敌人
    /// </summary>
    public readonly bool IsMultiAttack;
    /// <summary>
    /// 血量
    /// </summary>
    public readonly float MaxHp;
    /// <summary>
    /// 占用面积
    /// </summary>
    public readonly System.Collections.Generic.List<int> Dimensions;
    /// <summary>
    /// 脚本
    /// </summary>
    public readonly string Type;
    /// <summary>
    /// 等级列表
    /// </summary>
    public readonly System.Collections.Generic.List<int> Levels;
   
    public const int __ID__ = -86196685;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "description:" + Description + ","
        + "NameId:" + NameId + ","
        + "Icon:" + Icon + ","
        + "Entityid:" + Entityid + ","
        + "PreviewEntityid:" + PreviewEntityid + ","
        + "ProjectileEntityid:" + ProjectileEntityid + ","
        + "IsMultiAttack:" + IsMultiAttack + ","
        + "MaxHp:" + MaxHp + ","
        + "Dimensions:" + Luban.StringUtil.CollectionToString(Dimensions) + ","
        + "Type:" + Type + ","
        + "Levels:" + Luban.StringUtil.CollectionToString(Levels) + ","
        + "}";
    }
}
}

